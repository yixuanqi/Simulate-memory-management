// Test.cpp : 定义控制台应用程序的入口点。
//

#include "stdafx.h"


int _tmain(int argc, _TCHAR* argv[])
{
	/*
	有12个作业，每个作业有一个进程，每个进程的功能是生成200个14位的虚拟地址，每生成一个虚拟地址我们就把它分为6位和8位，
	8位是页内偏移，6位用来在页表中查找，每个页面为256字节，一个页表项占4字节，所以一张页表上有64个页表项，但只有9个有效的页表项。
	内存空间用32位的int去申请，所以一个页表就是大小为64的int数组

	利用遍历的查询方法
	32位的页表项最后6位放vpn向前4位放进程的存储器的页内偏移(0001~1001),第一位放有效位，其余位置零

	将从14位提取出来的6位vpn与页表中的每一项的vpn去比，若找到了，则查看有效位，有效位为1，则直接根据前4为偏移量找到相应的页号，
	将页号中的6位物理地址和虚拟地址的8位页偏移连接成物理地址
	组成物理地址
	*/
	int* page = new int[64];
	int** memory = new int*[32];
	for(int i=0; i<32; i++)
	{
		memory[i] = new int[64];
		for(int j=0; j<64; j++)
			memory[i][j] = 0;
	}


	printf("%d\n", memory[0][0]);
	return 0;
}

